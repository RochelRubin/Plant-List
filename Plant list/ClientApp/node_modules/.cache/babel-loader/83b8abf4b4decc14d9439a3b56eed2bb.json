{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\repos\\\\Plant list\\\\Plant list\\\\ClientApp\\\\src\\\\components\\\\PlantGrid.js\";\nimport React from 'react';\nimport PlantItem from './PlantItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlantGrid = _ref => {\n  let {\n    plants,\n    filterCategory,\n    searchTerm\n  } = _ref;\n  const filteredPlants = plants.filter(plant => {\n    // check if plant matches search term\n    const matchesSearch = plant.latinName.toLowerCase().includes(searchTerm.toLowerCase()) || plant.family.toLowerCase().includes(searchTerm.toLowerCase()); // check if plant matches category filter\n\n    const matchesCategory = filterCategory === \"All\" || plant.category === filterCategory;\n    return matchesSearch && matchesCategory;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Latin Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Family\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Style\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Growth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), filteredPlants.map(plant => /*#__PURE__*/_jsxDEV(PlantItem, {\n      plant: plant\n    }, plant.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PlantGrid;\nexport default PlantGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantGrid\");","map":{"version":3,"names":["React","PlantItem","PlantGrid","plants","filterCategory","searchTerm","filteredPlants","filter","plant","matchesSearch","latinName","toLowerCase","includes","family","matchesCategory","category","map","id"],"sources":["C:/Users/User/source/repos/Plant list/Plant list/ClientApp/src/components/PlantGrid.js"],"sourcesContent":["import React from 'react';\r\nimport PlantItem from './PlantItem';\r\n\r\nconst PlantGrid = ({ plants, filterCategory, searchTerm }) => {\r\n\r\n  const filteredPlants = plants.filter(plant => {\r\n    // check if plant matches search term\r\n    const matchesSearch = plant.latinName.toLowerCase().includes(searchTerm.toLowerCase()) || plant.family.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n    // check if plant matches category filter\r\n    const matchesCategory = filterCategory === \"All\" || plant.category === filterCategory;\r\n\r\n    return matchesSearch && matchesCategory;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <span>Latin Name</span>\r\n        <span>Family</span>\r\n        <span>Category</span>\r\n        <span>Style</span>\r\n        <span>Growth</span>\r\n      </div>\r\n      {filteredPlants.map(plant => (\r\n        <PlantItem key={plant.id} plant={plant} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlantGrid;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,SAAS,GAAG,QAA4C;EAAA,IAA3C;IAAEC,MAAF;IAAUC,cAAV;IAA0BC;EAA1B,CAA2C;EAE5D,MAAMC,cAAc,GAAGH,MAAM,CAACI,MAAP,CAAcC,KAAK,IAAI;IAC5C;IACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,SAAN,CAAgBC,WAAhB,GAA8BC,QAA9B,CAAuCP,UAAU,CAACM,WAAX,EAAvC,KAAoEH,KAAK,CAACK,MAAN,CAAaF,WAAb,GAA2BC,QAA3B,CAAoCP,UAAU,CAACM,WAAX,EAApC,CAA1F,CAF4C,CAI5C;;IACA,MAAMG,eAAe,GAAGV,cAAc,KAAK,KAAnB,IAA4BI,KAAK,CAACO,QAAN,KAAmBX,cAAvE;IAEA,OAAOK,aAAa,IAAIK,eAAxB;EACD,CARsB,CAAvB;EAUA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAQGR,cAAc,CAACU,GAAf,CAAmBR,KAAK,iBACvB,QAAC,SAAD;MAA0B,KAAK,EAAEA;IAAjC,GAAgBA,KAAK,CAACS,EAAtB;MAAA;MAAA;MAAA;IAAA,QADD,CARH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA1BD;;KAAMf,S;AA4BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}