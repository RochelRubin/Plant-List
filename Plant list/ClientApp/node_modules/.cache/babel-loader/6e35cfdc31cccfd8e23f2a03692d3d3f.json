{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\repos\\\\Plant list\\\\Plant list\\\\ClientApp\\\\src\\\\components\\\\PlantGrid.js\";\nimport React from 'react';\nimport PlantItem from './PlantItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlantGrid = _ref => {\n  let {\n    plants,\n    filterCategory,\n    searchTerm\n  } = _ref;\n  const filteredPlants = plants.filter(plant => {\n    // check if plant matches search term\n    const matchesSearch = plant.latinName.toLowerCase().includes(searchTerm.toLowerCase()) || plant.family.toLowerCase().includes(searchTerm.toLowerCase()); // check if plant matches category filter\n\n    const matchesCategory = filterCategory === '' || plant.category === filterCategory;\n    return matchesSearch && matchesCategory;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"striped bordered hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Latin Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Family\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Growth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredPlants.map(plant => /*#__PURE__*/_jsxDEV(PlantItem, {\n          plant: plant\n        }, plant.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PlantGrid;\nexport default PlantGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantGrid\");","map":{"version":3,"names":["React","PlantItem","PlantGrid","plants","filterCategory","searchTerm","filteredPlants","filter","plant","matchesSearch","latinName","toLowerCase","includes","family","matchesCategory","category","map","id"],"sources":["C:/Users/User/source/repos/Plant list/Plant list/ClientApp/src/components/PlantGrid.js"],"sourcesContent":["import React from 'react';\r\nimport PlantItem from './PlantItem';\r\n\r\nconst PlantGrid = ({ plants, filterCategory, searchTerm }) => {\r\n\r\n    const filteredPlants = plants.filter(plant => {\r\n        // check if plant matches search term\r\n        const matchesSearch = plant.latinName.toLowerCase().includes(searchTerm.toLowerCase()) || plant.family.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n        // check if plant matches category filter\r\n        const matchesCategory = filterCategory === '' || plant.category === filterCategory;\r\n\r\n        return matchesSearch && matchesCategory;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"striped bordered hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Latin Name</th>\r\n                        <th>Family</th>\r\n                        <th>Category</th>\r\n                        <th>Style</th>\r\n                        <th>Growth</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {filteredPlants.map(plant => (\r\n                        <PlantItem key={plant.id} plant={plant} />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlantGrid;\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,SAAS,GAAG,QAA4C;EAAA,IAA3C;IAAEC,MAAF;IAAUC,cAAV;IAA0BC;EAA1B,CAA2C;EAE1D,MAAMC,cAAc,GAAGH,MAAM,CAACI,MAAP,CAAcC,KAAK,IAAI;IAC1C;IACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,SAAN,CAAgBC,WAAhB,GAA8BC,QAA9B,CAAuCP,UAAU,CAACM,WAAX,EAAvC,KAAoEH,KAAK,CAACK,MAAN,CAAaF,WAAb,GAA2BC,QAA3B,CAAoCP,UAAU,CAACM,WAAX,EAApC,CAA1F,CAF0C,CAI1C;;IACA,MAAMG,eAAe,GAAGV,cAAc,KAAK,EAAnB,IAAyBI,KAAK,CAACO,QAAN,KAAmBX,cAApE;IAEA,OAAOK,aAAa,IAAIK,eAAxB;EACH,CARsB,CAAvB;EAUA,oBACI;IAAA,uBACI;MAAO,SAAS,EAAC,wBAAjB;MAAA,wBACI;QAAA,uBACI;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAUI;QAAA,UACKR,cAAc,CAACU,GAAf,CAAmBR,KAAK,iBACrB,QAAC,SAAD;UAA0B,KAAK,EAAEA;QAAjC,GAAgBA,KAAK,CAACS,EAAtB;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH,CAhCD;;KAAMf,S;AAkCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}