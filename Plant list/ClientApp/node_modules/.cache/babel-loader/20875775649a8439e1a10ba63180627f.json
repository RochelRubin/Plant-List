{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\source\\\\repos\\\\Plant list\\\\Plant list\\\\ClientApp\\\\src\\\\components\\\\PlantGrid.js\";\nimport React from 'react';\nimport PlantItem from './PlantItem';\nimport { Table } from \"bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlantGrid = _ref => {\n  let {\n    plants,\n    filterCategory,\n    searchTerm\n  } = _ref;\n  const filteredPlants = plants.filter(plant => {\n    // check if plant matches search term\n    const matchesSearch = plant.latinName.toLowerCase().includes(searchTerm.toLowerCase()) || plant.family.toLowerCase().includes(searchTerm.toLowerCase()); // check if plant matches category filter\n\n    const matchesCategory = filterCategory === '' || plant.category === filterCategory;\n    return matchesSearch && matchesCategory;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PlantGrid;\nexport default PlantGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantGrid\");","map":{"version":3,"names":["React","PlantItem","Table","PlantGrid","plants","filterCategory","searchTerm","filteredPlants","filter","plant","matchesSearch","latinName","toLowerCase","includes","family","matchesCategory","category"],"sources":["C:/Users/User/source/repos/Plant list/Plant list/ClientApp/src/components/PlantGrid.js"],"sourcesContent":["import React from 'react';\r\nimport PlantItem from './PlantItem';\r\nimport { Table } from \"bootstrap\";\r\n\r\n\r\nconst PlantGrid = ({ plants, filterCategory, searchTerm }) => {\r\n\r\n    const filteredPlants = plants.filter(plant => {\r\n        // check if plant matches search term\r\n        const matchesSearch = plant.latinName.toLowerCase().includes(searchTerm.toLowerCase()) || plant.family.toLowerCase().includes(searchTerm.toLowerCase());\r\n\r\n        // check if plant matches category filter\r\n        const matchesCategory = filterCategory === '' || plant.category === filterCategory;\r\n\r\n        return matchesSearch && matchesCategory;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>Test</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlantGrid;\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,KAAT,QAAsB,WAAtB;;;AAGA,MAAMC,SAAS,GAAG,QAA4C;EAAA,IAA3C;IAAEC,MAAF;IAAUC,cAAV;IAA0BC;EAA1B,CAA2C;EAE1D,MAAMC,cAAc,GAAGH,MAAM,CAACI,MAAP,CAAcC,KAAK,IAAI;IAC1C;IACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,SAAN,CAAgBC,WAAhB,GAA8BC,QAA9B,CAAuCP,UAAU,CAACM,WAAX,EAAvC,KAAoEH,KAAK,CAACK,MAAN,CAAaF,WAAb,GAA2BC,QAA3B,CAAoCP,UAAU,CAACM,WAAX,EAApC,CAA1F,CAF0C,CAI1C;;IACA,MAAMG,eAAe,GAAGV,cAAc,KAAK,EAAnB,IAAyBI,KAAK,CAACO,QAAN,KAAmBX,cAApE;IAEA,OAAOK,aAAa,IAAIK,eAAxB;EACH,CARsB,CAAvB;EAUA,oBACI;IAAA,uBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAjBD;;KAAMZ,S;AAmBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}